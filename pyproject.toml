[project]
name = "agora.gdn"
version = "0.1.0"
dependencies = [
    "cuid2",
    "diskcache>=5.6.3",
    "django-allauth[mfa]>=65.3.1",
    "django-countries",
    "django-environ",
    "django-extensions",
    "django-model-utils",
    "django-ninja>=1.3.0",
    "django-widget-tweaks>=1.5.0",
    "django[argon2]>=5.1.0",
    "gunicorn",
    "mintotp>=0.3.0",
    "nh3",
    "phonenumbers>=8.13.54",
    "pillow",
    "readtime",
    "snowflake-id>=1.0.2",
    "stripe>=11.5.0",
    "wagtail",
    "watchfiles",
    "whitenoise[brotli]",
]
requires-python = ">=3.13"

[dependency-groups]
dev = [
    "ansible",
    "django-debug-toolbar>=5.0.1",
    "django-types>=0.20.0",
    "django-vite>=3.0.6",
    "djlint",
    "factory-boy>=3.3.1",
    "faker>=35.0.0",
    "lefthook>=1.11.14",
    "playwright>=1.49.1",
    "pyopenssl>=25.0.0",
    "pyright>=1.1.393",
    "ruff",
    "tblib>=3.0.0",
    "werkzeug>=3.1.3",
]

[tool.ruff]
line-length = 100
target-version = "py312"
extend-exclude = ["*/migrations/*"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
# Disable conflicting linting/formatting checks
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
# Don't use them all but disable them just in case that changes
ignore = [
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]

[tool.djlint]
profile = "django"
ignore = "H030,H031,H021"
custom_blocks = "element,setvar"

[tool.pyright]
exclude = [
    "**/migrations",
    "**/node_modules",
    "**/.*",
    "**/__pycache__",
    "**/ansible/roles",
]
# "none", "warning", "information", or "error"
reportMissingTypeArgument = "information"
reportPrivateUsage = "information"
typeCheckingMode = "standard"             # "off", "basic", "standard", "strict"
strictListInference = true
strictDictionaryInference = true

# Reports:
#   https://github.com/microsoft/pyright/blob/main/docs/configuration.md#type-check-diagnostics-settings
# place ignored rules here
reportAttributeAccessIssue = false # too many false positives with Django models

[tool.django-stubs]
django_settings_module = "agora.settings"
strict_settings = true
